name: Build

on:
  push:
    branches: ["master"]
  pull_request:
  workflow_dispatch:

jobs:
  build_macos_11_12:
    #if: false
    name: MacOS ${{ matrix.os_version }} ${{ matrix.python_version}} ${{ matrix.arch_cibw_go[0] }}
    strategy:
      fail-fast: false
      matrix:
        os_version: [ 11, 12 ]
        python_version: [ "cp310", "cp311" ]
        arch_cibw_go:
          - [ "x86_64", "amd64" ]
          - [ "arm64", "arm64" ]
    runs-on: macos-${{ matrix.os_version }}
    steps:
      - uses: actions/checkout@v3

      - name: set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19.x"

      - name: install gopy
        run: go install github.com/go-python/gopy@v0.4.5

      - name: install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: install python 3.10
        if: matrix.python_version == 'cp310'
        run: |
          brew install python@3.10
          ln -s /usr/local/opt/python@3.10/bin/python3.10 /usr/local/bin/python_for_build
          /usr/local/bin/python_for_build --version
      - name: install python 3.11
        if: matrix.python_version == 'cp311'
        run: |
          brew install python@3.11
          ln -s /usr/local/opt/python@3.11/bin/python3.11 /usr/local/bin/python_for_build
          /usr/local/bin/python_for_build --version
          
      - name: install cibuildwheel and pybindgen
        run: /usr/local/bin/python_for_build -m pip install cibuildwheel==2.11.2 pybindgen

      - name: build wheels
        run: /usr/local/bin/python_for_build -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS: ${{ matrix.arch_cibw_go[0] }}
          PYTHON_BINARY_PATH: /usr/local/bin/python_for_build
          CIBW_BUILD: "${{ matrix.python_version }}-*"
          CIBW_ENVIRONMENT: >
            PATH=$PATH:/usr/local/go/bin
            GOARCH=${{ matrix.arch_cibw_go[1] }}
            CGO_ENABLED=1
          
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  build_macos_10:
    if: false
    name: MacOS 10.15 cp38,cp39 x86_64
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v3

      - name: set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19.x"

      - name: install gopy
        run: go install github.com/go-python/gopy@v0.4.5

      - name: install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest
        
      # need to specifically choose python3.9 under macosx10.9
      - name: install python 3.9
        run: |
          curl -o python.pkg https://www.python.org/ftp/python/3.9.12/python-3.9.12-macosx10.9.pkg
          sudo installer -pkg python.pkg -target /

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: "cp38-macosx_x86_64 cp39-macosx_x86_64"
          CIBW_ARCHS: "native"
          CIBW_ENVIRONMENT: >
            PATH=$PATH:/usr/local/go/bin
            GOARCH=amd64
            CGO_ENABLED=1

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl


  build_linux_x86_64:
    if: false
    name: Linux cp38,cp39,cp310,cp311 x86_64
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: "cp3*_x86_64"
          CIBW_SKIP: "cp36-* *-musllinux_x86_64"
          CIBW_ARCHS: "native"
          CIBW_ENVIRONMENT: >
            PATH=$PATH:/usr/local/go/bin
            CGO_ENABLED=1
          CIBW_BEFORE_ALL_LINUX: |
            curl -o go.tar.gz https://dl.google.com/go/go1.19.3.linux-amd64.tar.gz
            tar -C /usr/local -xzf go.tar.gz
            go install github.com/go-python/gopy@v0.4.5
            go install golang.org/x/tools/cmd/goimports@latest

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl

  build_linux_arm:
    if: false
    name: Linux cp38,cp39,cp310,cp311 armv7l
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build wheels via Docker
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.armv7l
          push: false
          platforms: linux/armhf
          tags: armv7l:latest
          cache-from: type=gha
          cache-to: type=gha,mode=min
          load: true

      - name: Extract output
        run: |
          docker run -v /tmp/output:/host armv7l:latest bash -c "cp /export/* /host/"
          tar -zcvf /tmp/output.tar.gz /tmp/output

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: /tmp/output/*.whl

  build_windows:
    if: false
    name: Windows cp38,cp39,cp310,cp311 x86_64
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v3

      - name: set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19.x"

      - name: install gopy
        run: |
          cd $env:TEMP
          git clone https://github.com/bjia56/gopy
          cd gopy
          git checkout v0.4.5+bjia56.v1
          go install -v
          gopy

      - name: install goimports
        run: go install golang.org/x/tools/cmd/goimports@latest

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: "cp3*"
          CIBW_SKIP: "cp36-*"
          CIBW_ARCHS: "native"
          CIBW_ENVIRONMENT: >
            GOARCH=amd64
            CGO_ENABLED=1

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: ./wheelhouse/*.whl
